version: "3"
services:
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_LOG_DIRS: ./kafka
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "simple-kafka-golang:1:1"
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_RETENTION_HOURS: "168"
      KAFKA_LOG_RETENTION_BYTES: "100000000"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  zookeeper:
    image: elevy/zookeeper:latest
    environment:
      MYID: 1
      SERVERS: zookeeper
    ports:
      - "2181:2181"
  kafka-manager:
    hostname: kafka-manager
    image: sheepkiller/kafka-manager
    ports:
      - "9000:9000"
    links:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein  

  


# version: '2'
# services:
#   zookeeper:
#     hostname: zookeeper
#     image: wurstmeister/zookeeper
#     ports:
#       - "2181:2181"
#   kafka:
#     hostname: kafka
#     image: wurstmeister/kafka:0.9.0.0-1
#     ports:
#       - "9092:9092"
#       - "9093:9093"
#     links:
#       - zookeeper
#     environment:
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_HOST_NAME: ${DOCKER_KAFKA_HOST}
#       JMX_PORT: 9093
#       KAFKA_ADVERTISED_PORT: 9092
#       KAFKA_DELETE_TOPIC_ENABLE: 'true'
#       KAFKA_LOG_RETENTION_HOURS: 1
#       KAFKA_MESSAGE_MAX_BYTES: 10000000
#       KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
#       KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
#       KAFKA_NUM_PARTITIONS: 2
#       KAFKA_DELETE_RETENTION_MS: 1000
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
  # kafka-manager:
  #   hostname: kafka-manager
  #   image: sheepkiller/kafka-manager
  #   ports:
  #     - "9000:9000"
  #   links:
  #     - zookeeper
  #     - kafka
  #   environment:
  #     ZK_HOSTS: zookeeper:2181
  #     APPLICATION_SECRET: letmein  


